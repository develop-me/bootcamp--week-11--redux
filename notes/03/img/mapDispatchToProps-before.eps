%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 542.000000 324.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.3 (Build 18D109) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 542 324
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 542 324
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Feijoa-Medium
%!FontType1-1.0: Feijoa-Medium 001.001%%CreationDate: 3/22/19% Copyright 2019 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.001) readonly def/FullName (Feijoa-Medium) readonly def/FamilyName (Feijoa Medium) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -80 def/UnderlineThickness 40 defend readonly def/FontName /Feijoa-Medium def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /R putdup 34 /e putdup 35 /d putdup 36 /u putdup 37 /x putdup 38 /space putdup 39 /S putdup 40 /t putdup 41 /o putdup 42 /r putdup 43 /C putdup 44 /n putdup 45 /a putdup 46 /c putdup 47 /s putreadonly def/FontBBox {-128 -334 2318 1001} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BECF6DDB462BE17009F2F261B5320C83C58DE85AC0ACE29E3D90B1295618628CE6CF86E506265A524075CBC64D73877D7EB7C120B802E775B8873BBF0C51DC69F292EC74C8222E98EEB1B61B222E253CE88D13383D1E6D8BA85D3FC59C2B4B2CBD5D4ADD4C19305984F559F01473372C0C5D4DC96547235BD2DC4C7727A8CF78849D3368DF87533F6580207514F6673BFA4C8F84454B17BA1DA92D790298BF6AF530427BEBDEA4773D2F6051F5130ED1C8B2246BD6C0166CA3421C26BA386453EF5D965F3C71C88BA5B60A45C669430BD88C473E1B21A90F2EA649309393E2F16AA3F986EE1304F199BE2EE6512C331BABE351B0884A556EECACF770091CB1DC4E782899D63E02103AA16847DB49566AE28F934C5347D96FB081D5798CCEF5D0556532F59ABBF95D937799A0AB1B6AE47130CDE98F176A58A6E5FD04D09B3FE4472DC4545F51564217391ED6A7BA13A026CB37B0FCC347197C11AFF96AA78836998E1FA585829F8F2DF03FD09B58A5D87E970D2409C75597A7AEAE21F24A89CD08F4DBC4EB59025F0C79A12D01123A229829A11A41B6E15E21558D3F043DCFE79365745566F4A202F3DE7F2703AF6A019BEC10D967B3A35D024BEA962AE34289ED63868C9611DBAD3F96067CF8986E5A0073DA1DC9BA3EC3D6BB0929C0AC7A2E104DE8621B79EBDFC3E02DCF52CFA6A47C04F306F58120EA70DAF8EE1A9B4984535EEB4ABE6C452908EDA9492FD3CE87E7D320D065FFB4E6AD01D102C104DDAF73EB8EFE373DD1ABBA9637C1F07EB71A49239E748B85A1EB807711A8C0CEE8F6DA1A957E706E56BFF82C7B71683F464783AA3503DD646FFF8CE721BCF17A58ECE301743BF0ACFA363A13730F4F025BC938832482AC1F5541FF2408ED3076DBAC1A2B9F192E786BD108922ACC3D5A9FF47537E303D1BE43C196837DB83FB71A3502E64077B859220DFA7F75D08D0A2817BF8AD39F3597584D933F10E4AE457F65AFF1516DBB8D28F3AA6BCFE7229D935B1C14F465182F40F510E37ADF09E4746ACCC69212B474EBB26D3106F85862F7E9AC25EC762271FE6E7963BEF872C86B5C041E3C5DE7E3F4D0ED5012DBFF0C06745A36F338BA1B2D06F94C50CB662BEFAEB6CB309ECD709386464507AA21A649B383CCEEDC1746D5395D1F864836E906AC688B105D036ED5695003C80979B75E571B02088EEA5C4249B79A15CC9053AFEBD7AF7180344C3C5C34C26329D2EF950C802021D8CF806A7858832EDCDD6E0F0C96865DB06B08929A76C24E2A764F6D0545555C964294D8D8CB7700F48C445F0E47A3F8767191F9C831CB5AACB3425B95D7A30FD186C5FE883AC6EDCF34B4BC99E2068E9765A11BF6571CB41A13751D070EEECD8860D8E574921F4A4E2FBF22617AEFEB9BF2560AAD6A514F38975761E37E4325555A967DA6A55CF50E21A48012BA48F2D09AADE219D797A04F76D9F35411D8A418D2EEF87A09FA4F0FE221E53692AD78A0C266ABA4F0434E62E85514AE883124CF5C7D4B92969B61D4FD177CC579E7A74A5115F062E934253B7F644A9DB5900CEBB12FDD7D43E42A5EF32122BB3E55EA28719A02986F99352F74769282D6E22713A6BA6EAF552C6A4FE51F72869E0623F147101D0DCCC1BD31C98622B74C08B4F9C84D827332113F63F412D40DFBD12C3B04A0F2F75DC6D683616629A3874C9F9BC8B4B1DEBEC59B4872422BBF902ACB9CA3F0182CD3E8A0F7C1B5D8E79F91967AF010C8E3A8931E1E4C4655CB0E78BE6243073E2AF3C3E45421BEAEDC59346C4B4883F1627E3AB91BCC071F712756472D87539338A1F065B45ADD328198AAB1CBF6D6DED7BB6E2ACBDBB432B67FCCE8F89D6308BA2B528F25DF064116C44390309B45E8B3E7EE8B40254CBF411B939931BCC1F96F1F348F952FE0A91C9434EA6DE2E55C4A26F081CB6A1F510B627EC912BAB1116E6BC5A5CFDD615ABDA5E3E617540B2241F435B9E207C86B71C70ECFB3CBE61A0607AFB88F58CC4A23E0C306776ED13E24A55CC3E254820833A28CCD16ED767B4C6CD3B0D0ACFF9303B8FE9D2424E0860403D1981DC44D8481E38C0CB9220FB507E805B19DB72BEB1818BF3949536806AF8916FA731E0684E0FF914595E406538608472542B278C3E3E9CF8D8F7FF133329A7AE09D728752D8497A05F2E4A509DBD5B97188CFA940F61111F7FFF5B22B996BB87ABECEF11A4A831F2DCE6C2B39B9BF9970799F0C499D3A5D842133CC8A580B40E0062C825EBA6714833702BAAC416F8BF1E166C43A66B05295793B2C5CFF1C9417F2639238E02DC558182A0B293CE622371684893FDF241932B93DA4B590E997BC8DBD6491B62F3CE3AF2DB2DB24160FE5F1A32803D7740B953EBDCA0EEC97F88C8E15F1FEB196D7FE680A21936146FB962BABB0D1F539ADBA33983279C5549FD41EC85A6BBEBCDEA0C041FFA6147D719C88023003DE7835140251BFAFAFF165BCFE6CE6A83780BF63C09D31B83F46BE10A17DDF581E29607AAF727E065BBD9BBE1B48824010E32F09FFF3D5BC7A091AB99435D83C8CB7CED460661CA08E33DE376C99DDCE2F1CF786453C3528CCB85CF6536A6A42D6C7977816D54896F21EFDBCF62B93B28805B8A6A1C9846CBB5B1D5FA8BFF62AA395D4875EFDF3D9126520E7DA1EE04D0B4272BAA0C1EB73AC6E0B049E39E7BFA09595BF5ED35047E38B454E6D09556F79A1C1757DD7ECFFC7AD8A1853D995B03663B09267BA5A0E0B98713AE0D86FEAA12DAC19BA6962541E76C8E2CF5C3E948F8FA3A67C70AF1E9280E088BEBD2542B4648687F4638E2F67B7FA8AFDB9A0FA2AC835E48DC55BF17F70830A642F6E808E48BE2E81C5C90B663C74CE3E7297E62665005EB911D062A3EF395ADB2AB789BD8DD380B86965F2FEB804AFCE3B9D484F05D91790135DB64722238464945A7115D4F4ABF0B77A8E814AB159254D07DCC630575CF98D24BE1969D9DA99DF3AC840DA6650F6794D9634E89E0D95E12AF2623C7F4D0FEDD1515B8BE8D02DAF8375601E3615D312D1E927E0FF3122662D7C9A5095D2714B0E325AFC39B59DC72FE08CCBD78E645142165E1896B29E3572A3B5047FFF4FCBAD24A82BAFD5FD93A4B06A66150EC6753656F030DA609A3F2545346A080DAF95C1A6DB712F3E9D37D3BE3BA83066DD3C563A1109471ACC51CDD2419CE5D2B25297E046E6A49D6D9B7AF796ED1AB2C21E526D4AC44D75D5673010869FB943D0ECE8B842ED80A85BCCBDC7305D5487F437A4076D99880AA8FBD7033637062DDE606A54B8EDFCA3893C849ED5AE4A20392C036754F092585076FEE0806D329E9760279D1CC4C9A73E1576A25A3D9D3B8592CF42725BFAEF36F0FBC05E79038BF0E69967A2A08DBC36254C78A6E805680D2F737CDE461EDB0A291C88F7713EF98BAE84BE9DD4214DEB231734E54CD1FC6157C41FB273593B1C71489E2C0F86C1A44BEB7B6B3FD95E218603CC41EAE23391B652439521203B4D70050AB1AF0B3D53F6FD22D036A6717C0B7BEA97D8EF03AB08C0D2EE7BEBCC7319A9F1D7CC6A251D334FA247C246F1DBB6A8FA107363C2F53E11B7AF54B0FD6E558D2502283264264A6C27EA22AC414D3FDF53A315B481CC86C7510F50A255928E8DD730A38C4CD3CD4C94092E6FD303C626B3A5F583105E511204D5A36107D6481361A339E182E8430F74BA442DA7C56A56362CDDD9E9E4288750FCC95F0995FFB26E0CBD9459766DBEE23C171D0B4EBCEBFBB956934B249E6DDCB463413B6562402437D8809830A040C147D8550C2214974E70BB8A3427F16D8BEFEFD08C9FCA8161CF6B2CC9E8A0B95FE4484F47490076F25A07992565BF0C28C47E5C8FDC4CE0E2C0F548196FA91313BB4B77C95766C90B0970751ADAF11C39D753E03711495CB41742BAAF3E244EAC38B667D2F3A8F8C96D54E17488F4EDDFF53D6419497A0E8D42DBC86715E8A86FE0F24C4736BCC8B90B28B5485CB76E326454D73DA29189F70723BF347E1F1538E1467D30F0CA77F41CF405D25ED4EF56A17AED6A0CBB200B8BB688ECF0F4C28259F53D3C99736648BD70D566DACE2B1E22BB36A41AC69C46C54F369D37B017D82B20A4D33F348913AFBFC09815B150E4CDE6E86F80AD69E65CA02E2A14B964F555F2850C545EC88A11D1F7D45413F421600BD61129D5B561DFD78B4863DD1E8D6C481299EE2141977BF8A5E78109E6112A544E0C244DFA759F85FAB9D484610DDEB7F733417EB0B9C9BDC14635BC2633E566A83E387FBEDBC86C7F46A4E5F9D5CBCF546CB85D0996E5815BE34C21E41604B2670DE39124352B58F0ACFC2BEB2B16B514D1E59A91E42AB0F27FC62FF5EEB2470EF36A05978A4166843F7B8593520976981C463384C68C50363B05AF77392571C7703735CE3AE0F18E05435EAB6896D47AC4235705B778713E31F2C5DAA0A3C6074EF668BB763AB30E93D8553D44617DBFC74AAB870CEE11CA2448425374D082DD32B7B16899B2DCD82118E017E73CE8D15C33992267578556A59ABADBD0D63AE2788084AD486A6142BDB90A34C2E2E5746AC3219695E624EC6E91B4A074424EF14518A357084B307A610EF310ED6C45ADBB768FC0E9416EF28D984E5525FD00010CF4DBD91C2DB0C5A8321516B6C49D7A2C8098C3A6ACF9A0B9D25DE539787FC716A58E605C9C68F7612B6A93D8504C45ADA716B359FCBDEFB8F3CCA88CDA25584EAB08839C7F41519472FA0E98F75284F301092E36E856851E0513BF01438F969ABBF0355132457BA698E991FD64CC296D56EF16F17761B5493E5D1F79566D5407EB84F9F539D138E292D67FFC6A9D2DD97EAD87B51FA17ADE5BC622AD4AB355D844809B944C3CE299E04BC5CB9178DE016C2F8D2176ECE047DFFF64212220F4C75C705C7BD1754F7263B1088A5DDA386D7719AF65309BCC85D4C9E0470518CE1315201E67AD069D2F8BE433F1F42DBC1E5DC26835DDE2656FDC24033277892425EA1FEDFE1E1A242DFEC4C2419C24E67C1C6B2CB92DC89C4974A4B255DEFA071887707167C87D9B898A55A979BCB0BE0194429DA46FDA439DFFCE4455F045AB5853B11AE25ED63883B03C85EB95D8D381508D81C01909E09E16790542B9DE47448D12E26505F98EED13D9A413510BC5B3D3DA76C684B3BFB1A01C6622FEF325AEA039C797963B109ED27D9FCA52CEE5F81AE0B6353660A98E45137A020738B093FCE89BE3E6F03DBE2D8E47A07B5289F08BEDDEF4CD04B715F4BD6DEAFC39916D5084519EE3E88C593DEC6B933ABF6BBC29A2E4194DA9EEBB6FE4DA1F06BCE4C6E360251FB98830C14E527679EC03EA2CCEBC001A3992FCAD3EA04E4F887032BB6A6EA61B4A6C8189A3113B9782C347EF06C69C5C4A2DD0DA13E0E5748908B0FC1DBD3636C2C056864ABAF2073BCFD3AB4D5D6ECA3F5823E3363E4F3830AAA6DB0CB7E2DDABF9FA59F758EE982DF670378C65794A51B30F451C0DBC70D5D0BF3EE574DD2416E7620D7E17546B03B3E3983C8647FD4A2236629BDDF01D8F2BAB2E7C3D9C275BB2A746807B9A2F11CEFEFEF44B0F0EC1F8A4F27F44FFD4FB265803563B50A2570F7260F085839705888E03508D614F2DA9F007ADDAE1F3552B0B867FBE4CE17596418DEC4197F0C6A11789ACADC7172AE33271F8ED255E16660EE4D82F18C62656C9919AC9002BBD600DFFD93D95C3448DE2C9EAA5FD707296C4EC7C91297C8EB75BA5FF96E0C8C4F28DFDC01272A2979993B1B557E2846D8091E49ADF9B9C738F460FFEE5F70AAC1FA5432BE718F19B2B0A7F60A88415616E54ACFC2EB9B43E2CC17244E64922E3E694C14138A13FDCCD54C7B8FB52C0B1B1EC805BBF8CD03428085D3D2F43B9CB7A59F8C485CF18B190E675D8F9C678638C639B9BBAA72447DCCA7623682135D7758D585838B0FDFBC6155BE7DFA25934F2EC88FF3C719A28F0676AD005C73465600B24DA7E01FC23BCE89D142F5C50DEE69B3F865819859874C9221DEF29FBF84887D713E77BCD8B0A5529370D54F4E36CA511E699C49685CBCA395045BC45FFB3E493190F163D0E0CCACA8AB221C7910DA5CAE7A13BC7250A87091D6DF72FD989914ECE1D755844B5CE1B616A94CF1451EA135228D2C195E1F915717CF6A12927358815DDA15A91CC14DC0559E317EAAF273D60E99111A056A86479FC2C4FC177C67EEFBE537C47C0A292155F0B2CB7F1FB6292A9358F730D97697B28B9786425439197F24A30B79E403765B1BB0645A530958DD4E7AA6A8B0E32180C5B809B3E6A66685F00B3E0015D7FA87E810E7CF265FADE549B98F02DB93D28440C221FD78A6B4A4FAECACE87744F68909E29997DD4C7F9B9D0EA473196C232C0D087B689081CF3CDFCCB5766546478243702CC3020E3915F6DE0B36EB40CFFD02873ED59064A71386C12B5908EC392F88F4F9D557AA45A410F1F0BB450718395B66AD745EE4E8C67D859196A07A994B84C1B39A1663E06C973A9A09DAC53F879DC93A56C1B19522B7B05F8F57B870952C9AADC6AB0FEA608810B56D451EA44DF8FED874F85E961AF266B2D3F89EDCBFD97D77AE0A0AB7D62C373EE1B9C5F8381E2CD1E321AD66D3F73E880D9E6E99A0A1EC98DE6D4718FBF132EC32D187E2BA24356199262F625EBE4D19C08481DE1185629D9ADB3A54DF61590C2457A33F3262934793E3CB5229FBEF040ACDF42804535D703BFCF17F70EF7FA4CAC023E83734624D734CD68F44FDF8273231A1574A566660E47AE1AF91995542CE42DEAB65D5823BB61283A989C5C7585954A7D7F3AAA9B31004D2CED7294692DDE45EDA150CDD8F9A06F65695CBCE02A0B9B055841CAD5C8C5FF6A2E2578897BFC11C6408FB9497F5E0B600D5D086B1B53F4A694B727650CC8969D6DDEAA16F67A01872893E08DD68E929166ED8508E38CF5EC2902FC677FA2B8AA8BB41B070D108AEA340A8856AAEEEB3DEC168F8B3B680EEA02BC353FDDA083FC854E535A1516FDD32BEEDBEEB9D3F50A7E76D6588D0849EDC4AE268150EBF60AFED1A4B29BD2E6507408C40F4E38C13A14A58F39882F72A93554161124BB2B4394CFC57B217C790E3ED1A4D9729506F5965190237833EBF50650882F89035A7B9244F1763FE2E20BA23B0FCCCDC75E7D19750650153DBF384076053A5FF764E95B8076701AD9817B103DEBB6AB250A91A8AFF10F9C694BC0E1FB47B0540F40A4B7E54D4DF7BFF0B6773D593CB1E542DC0BA36CF4D88DE2152E34F3710077B8F5C2116038345C7AEDC3142ADAAA96DD6AFE45370DC2440B9A72FB670C4C0927FB2FFC4907D7F9181561F0109429128A6F28BAF03540F90BE963D2EDB55E11606F40EB64479EE6BAE7C159CBDBC805054E6312CEDA9F0AFE72642B915BF17270BEC4FE73B289BA5680E0B468536C835CE2E22A842DF7B7A42F819D32220105393C1ADEB8838A9370302C9010E586E9EDA7403E03525F4212966D6D7AD719DA3906D353ECF34B3A574BC194DF2B28F0FE88D87AA0C37EF8255F96F3D2A16D84ACB6E20D7EDE3296201170C7CC6D524E55201B42E17854783D7D9BB1B62B2F75F7D799E9353FEB130D29932731A7F6B17D8F1FF628230AC80524DBA407AFD30E581461D0359DE7D1FA98FD8ACE29D2E07D5D10C05453D6D957A92B2B253FB78070265B688FD3BB493A325833027BD93C858A6893245E22F5851D1A22F12D61B75EBF89FD20189EE83BFC3E28B40450C549F4B805123A92D174557D584A5787BB6100F4148C538B4E8B879662A3DC00BB1E1DF2F6C3F062542EEFDCC22065F9346AE55A5C37BA0C27A84933CFCDDCC723A92C5D81B3B8D5E7CE205003048A2CEA9A7892567BEA46F085267807AB95F76AFE22EFA8A4E60BCEADB30CF626F6EF303F4956C4866723D8C3E56B872575EBD4BA6D8136F140C3F20965C932B24D72657310B5326AE447E6F3858FDB0D260E8FB7D4ACB00B0D0EE5D59658AEDF91D2B054AD21909543E855B88E021D02FD23743088F4E2AFBE9513BD72C802BDF660A85F22BF00D06E684557AD95B6B3D225666E65351B94955E5B3AB9302135D9B0516FB632807559E1CBE79688ECCB32F0F400FE634F092D8D5552EEA92FEF6EAD674852BE85248CA33CFBC3056ED0C7831B8677766581C75B63A6893F66EDE2B232A5055A36C69D99FD684684975DD96D001C138909E9DC5BC3DB21F68CF995CC6A8C3D91388C46D24B0B09BC293CAD6F703C2F2CD223B5C44EC33F971CF4670902322064711861E64D9BE8BA2FC0BA5BE8625B9AFC8D5A376C71EBB0D5D5148196A181A1703E2DA11809E6E5C4BACD6F536EFA107CBB44CA3085653AEC78BD7AC8D0AAF905D4EA47B735254BBEAD54620058F203135060CCCB0661572D33493F52AE695DEECC1B389D95630038452FFC566E068E5E1C235A4C88A6BE56787D3FE5015DDE8F480975E8059125C884C53B1187BC7EB8CB2E9A6A114D274334E0787F79382FF580DDFD9C5A54486B478A26304F0758D3DED31A1BB84111BF1CE95C22443AB107B6949D0222D6DAB753374BD9F2823DE20EC6AFE36A858627E47E6972BAEE20FA5D6704780155DE7679DE9640915E26AD52F354B86CC66C348B445B13B0F6C7FB735CD5276DFCF60E992FDBF033049A8D0BDB20EC647C44E8ACDC94235D7F87C1F0D5ABC9D503D246A63D32FC8D9A145A10F7827449F9A9537805C0B4F0540BA5D84161DE0C2D8A553364A9D055CC08AE567D5DF9082FA91E5CDCE7C0576EA3D66637BE563E89721B99EFD489ACCF555719557D94046BFB2BFC8C69BB24F106E45A0FC57151FBBECC539BC37C91D1EAE123A6EECE60AC0DCE98C909A468AB30C37CC4CDD6B1D4D4192F52676479AE8F91EEC18F94243515BBEEB6718DF9AC5E770ED342F910CB02289E485AFE4994ABD793F56E501457310AAF02D0A2D91AACDC94FAD81A7CA54C6B83A96955E89288B9F0F00725EF24337ED05899384F7DC4E5B3BB7118826D85E096C78B16B1F09E1C454C23084CD4B9AE152648F60A640D1DE8EB4164745430F10A853B3B45AF9438BA21F9E43BAD555648B77710926606F749F707D42D3250412C09440AC493169878616A80475237AF93D80F88E98918F09EB323F466459E4A43FB8375A1CF4B2482D465B58B58277F0055C2D91900B9EC4020B22040A90849B098C4010273C954A31B0B66328D3559131C07B996FB6246D163F6B61396CCB874B7A19F64C009EFF5154D0774C65050095D5051BD76B8B1DB08EA49FDD46B518F1FA86EA7BC3641927817F8800339D5D52381F3AF7F307BC76690439C71DE459F2C6F7BEA1CD456CE87DB4917177D8C27708F93F84C5B3612D338ECF9831E7D6AEAF8DAF62EE71F202678635D6130356549BDD759B9CCEA7123064ADA03D32D321FBCB706D5E6B596E6D9A1FDA47E27239C04DCAF3CF9804E06810CD3914BE538115CD5FCA2696C6473E18ABE55A1DAB8E30A8FFA33D8C3A877124450377AD45487A7E31C0F92CF6073B4ACA81B20858EFDDA98AEEBB9EDD4DC0CF33344775A5F4AC3168886D9B029979CA72B619FA75D5DB0725D19A05167743643E7A3819B671E0A0E5B0C08FD5AF4E1CE71578D6E4552D482066E3CFD09F6EFFA2D9EE8562A4BAE68313094D7BA9DC45EBF2EBBAF186FC7405F78E7CB07194EEF579EFC12835712E3E9F22796B597F900C2AC7BDEF8F397632ECD6202CD7870B1414AC47AA9AC534E0CE750DB11E0651A1BD850A1850B7EA9344D6C2A99E9A4323E8CFE280D1B457D705B747A196B91262013AA70D4508A81B1D9123D2B4BE311C1EDA03C3B5CC1C22927A3D8A4640D16A00C631073CE3B60687AF5841CC9A9F809CACF688526394A97C6A029B95097A1983B52FD15A78828E5C79EAB31EF83E2F4516347C2E19CA25AD9F9349780CD782AE303FDDE6ACE2C0A94C1D4740D00B88842C33BE21EA6E9FB0DF26A26BC977330CA5BFDF61D682970ADDBDEB1FA85476431A510FCFE1A46EEE66A716D7A1D20CFB6CA545C34FAF9BBCB0060D3AFA6D7664AC9DCF642FEF59ED395CCC9B28D8EB3CDE5A1737EF56CB59E1B562D4909F99C43882B0925790224CFEE5AEF09209740C65207543BB8CC8A91CE8907F5496570E650618963DD60465FD142C64023DCC77CF8F3C918932223447D62F9910FC60C700E63B03E555260FFA26614CDED30F15D265F8DBADB121E97772322913297D52887C72032437A369B15BE97C228E38F43B481A9D13865CC4BE364DB7D1D442893D03D8CA3BBFB777F7FEA950C35C608C14B188F259541B243F1137E2E7DD2245433195B569E7AA75A5D885D1E76CC48FB3E2526AFD58333B551D99940CB37927E1AC1C97289D09579CAD455A48DD5E46BF2335FD9315D285B02D51C159A2217676E527AE384DB9737471ADE57CB18F63EB98580B8A9F8561F0F2343DDB70981921E03E93A5B3B630C4AC0748C1C24E994EA7F625E308ABDCC6B27E2375352D25FABA1FCDDCE7406EFC244445CF04BE02783AD4209129E255E1987F0EDAFCBD1FAA7CD3DB09498F8A8FFF9BEB9149C6BBCFCC25A250EAF974865C8D954768F5347F9426A8A08FD96FC5828299B3917D224B6A2C69B572CFD9A506EEB938020AA8959B87B43D8B96EBC4AF9145E0BDE997B03D6866C382EC2394067F7DC65FE35BA71D71B199EADFAB41A70D55166EFEEE824E988E8CFD178EE34402DEEEEFDD618A8598B9FA9A1FB2220A2FE491415B27816EF911735AB87DA35FA156AE5735AB01D79FFE501666DC7A76A3DCE58163DEECAC0D02E40679B3936447ECC0D1362580BE3F1FB3E96B09E0762448ED97EB32961985208C0F37773E928C206703C5EEBE22A27626B77AD7E39E6E1F691EC769AF822498E29D75613A1E83356E1A1F23A41EE8656293DDC8928898B7B7BCC63204C1D0FA054CB248BBF7E00BC4673E8029F5E97B914275FBE69738B47E1C75FF46DECAB098512614E5352E61DBBB18AD9F5476DEE3CF7678063D1EB789E5D10B2DEB8CF21082A0BF8C97B8306AD9B9756F9F005F3239B02AD2DF7D8697D4D16743197A79C817952F63DA96AA2AB1BA5BACC3F125430333D72C031933314C388285CF8D01D19DFABD4E5E4C457CD2934711441D0CE82BADA75F124B8C013373AEBD37F5E78DEAD94ECC5DB724D3E64B074FDBA825FC7D91294D957A0AF3C8B90B842A82978ECF5F31AC0F0E5E61A921543CCDDBB9382584D10908A09E56F4F568D58C655FCFA060B190E7099B554220D24755726EA8078D9FAC4C27B3174670CB6F8516E47B60E58EE2DB20C59909E84A26CB7326A05408BA1EB035C42C067B09475F8950CDFE8059FF88928729E32F166487299E026BBA85C15A53A9A4A53D02E7023C47218C30FE6EC61258854600AA67156C440DC2B03CF3765A87664A89A4DD30D14432FCB3C063972C2B17582F6AF2E60E61FFFF035D21530E10F2E2FD544164715F59FB5D84FAFF6FC61779DE868839237451A6E4AC36794934BF7908E9A964932DC025FC147BDB8767C462C63916274801C7E69ECB6D3C9F028552D10A3CE96F4A049BD019D28A785392A0CF3DB66AF4197444E99AC769EA76492F7A8C9880E2380C86992EE8D4438D98CDEBE4464D3B12AE7E9F480DBA4A7F0E5ABCD4C1C4905B177B2577FEFC1D152AF2491B07FD5A2BC5E28036289235563033720CB43FF381BF0F199277A71C08BF051DC5CC0558A0D9D1D0CDD5D0DDB335670D0FCDF6316F5F09404CA4F9FDAE96421934807C27821C8725D38B8A84FC82EEA1FFE29CB2B045CF5A585471FDA5F6A9D7972169779F7892C800E5EEFEB9D173C7EFE7DEB9D45D97E8A293170AD2A17A70A7EFA3438BFCFEEE70A3FA452BB70D7096F2D2FDBF0DC571A9F41ECA38F3B3786938D24605B7F67B0832FC7307B0EA04B47D81F91EBC8E46C5B04842A47141A0FF23FE50D5C68FA38D85197614D1614F50363D7BDCF173A3EFEC86B5F8BB70C5B51B829BD01F2B0A60BB5AEEC92D3E088C549305139CBCEBC2EBF61403457BEFB347B63EDF3989DEED20C9D1211FF77DAE67761EF1405D2393F99F58196501BADBBCA24F34F4F212CE0906C39BB285506B263FABCB7915FE7879F8222283CECA1F7B5FFA5DDB75EFBC139E671693E63254C9F4337F812437F4652FC3F2D1BB655B8105CE13B463D8709BF27AB753ED6FCC3E4060A32C7281BF77FF3ADC84D1A504733CFA6E02EF902CCF4752D1A2B203D0B095C87CD70ABF7ED98232D0706046E803024AFAE402B2770A972A9E8D2E89AC37734F4C36653A08A28D31238FB47B61F94FE595BD3FDCA55EFB61DDD74AAC48A5610B00D83B592CEF19C4C53C6C4F4C83B1C7DE0C447FA00D9308BA94338832EBD084473A1AC79FAA366194F0F4CD6683DB45D47F9E26433D0D6E78282A3F2AFF3E7AC02E37A269980CEAE9EC680C45E003DF93C19B53383044278CD95598038A1844AEEF6AE59B0EEA88DA540F053007890079A6C33B6EFC954FF9F2BFCCC37A22F761452CE0A756EF37EC1C62B5044EBF7757CA6D661A320C332DE32ADF2F096878A2D47627FA71B5072DE8A6C402BDCF3A5A214D0F930F2A3EEEE05E294CBCA6ED07B2F036CBA0C9F97BD91EAC298253EB8F27A594D4A2A16900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%RBIEndFontSubset
/Feijoa-Medium cguidfix
/F1.1/Feijoa-Medium renmfont
%RBIBeginFontSubset: FuraMonoNerdFontComplete-Medium
%!FontType1-1.0: FuraMonoNerdFontComplete-Medium 003.111;Nerd Fonts 2.0.0%%CreationDate: 3/22/19% Copyright 2019 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (003.111;Nerd Fonts 2.0.0) readonly def/FullName (Fura Mono Medium Nerd Font Complete) readonly def/FamilyName (FuraMono Nerd Font) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -75 def/UnderlineThickness 50 defend readonly def/FontName /FuraMonoNerdFontComplete-Medium def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /less putdup 34 /A putdup 35 /p putdup 36 /greater putdup 37 /B putdup 38 /u putdup 39 /t putdup 40 /o putdup 41 /n putdup 42 /s putdup 43 /braceleft putdup 44 /space putdup 45 /h putdup 46 /a putdup 47 /d putdup 48 /l putdup 49 /e putdup 50 /I putdup 51 /c putdup 52 /r putdup 53 /m putdup 54 /braceright putreadonly def/FontBBox {-285 -500 1530 1064} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BECF50FFE512A20504AC72D0DC1EA9EF7AD19E01EF9C4F27F0BD48F7B4061CC960B4BDC13CBFDAB6E51AADCB7AAF2D906506840BDEF341835DAB1F9FB37CFCA0C5934F4C20376E97C32DA636E119C9EC781ADE503C1228CB0115B6B14E0CCB3C473CDF00AC16B57B4FF77A5164B80FA8C25C546C8B108D2AB296F392F4BCB85967939DACA6024385670718EEBE387DC51ECFA2F4F2FC8B108E370B0B1FB7B8EFF5BDE554B6F7C71F62225EFBECBD59988653882132026D225A7E432E72167448D91BA886F1FB3422B3532676674657A494945FB78CDA94AF976A5A093CFA1D1D7F59AF640B51088E59948FF66614146DF350F7473CCC6F1611E20970F00E6352E351F4ECDF811D7BE9535C4A61A4B3895698B6DF81C74892469C8F1A6395914AE6379C1BEA3EDA49302AF86A2D200D761EEF24525259A3864511CBC0D981947E3E2D932967634EDE1EE23447524065440F3B87F50FE5C899417C4EB66E7BF23C8EE4E36C5C48E98F074E235632DAFD395F5382FE5B948EDA824CA46D13F5A3F18F52F763143157C45EE5E0EA86814FF7D3A2F923A386128A675EB0061DB4C30468EE5BDA0FBAB383CB505AE3110BA46CBABA0C547265D5FC06C854D7E6DEB0AFAD4BC709295D78741D0270401BC787010901EBF03F65AFB5386E1714C72D25FBB42E4B5AE909AFB8465851046399FF9B1C1D4B026C94764BC19F3B3950D304D2AFFA152FB3FD7998466373B6738E4F7A1CF5BF6FB39F1321ABC1224024DF24DF9A3CA33F29361E1248E3CA23D518C6A017DA0D50DDC2DDDDE57700F089E6AC5DE7A800A0F80E12BF0DE3D1FCFDC386AF2F92E476B25E94627E8351E4A0A020B1372E85495544481A04F912C40D09ACBCEB5C77A176236D1F4B8E8AF7BA5DF75B0EFBA8A4BE27FF90B00C8E7902B1995C50B083F5F21A2A478A79B81103922E0C296CCFE8B8A416C60C40867936A1A325E6FF0E4C6A698004786E717801DE98C91B168DE3AF89A68D69070D50C7B6006A96F4591421337EDA32F54E2CDCD2B21AC2488E462B7D3D276397C0FBA034DC22E1651240123C1BB83CDFE9DB2494863A72960E12990909DAFF02D7A30324F01595EE37E52E366D6961DD70AC6E49EA2BD57E7F952BDCBF7DEE1120F5B4B559E7BE7A6C493889B80DB83098FF3BD75936ABF9128CC860BB42CE25E23CAA70F09E3E2C7B2CA23229FA8871765361A043381F90030D75CEEA2184125F87E5B1E4CD842CDB128690DFD16547BF66B7A94F323832D88FA2818311E4DF45D8271AD7FF38F92DCE0A304D7445B55B8A8E181905335761CB02E03AE242B646B560332171196790133BF7D3A7155DA541B87ACCD64B2549580D6A8181BAD537231BEA601A1083EAB4FA27D7B42C298EC730D21B24AFCA9CA2FB03DD313678095BEEAD0FA82F09E9D298A2683F654AD085B7A4187B5C160E2084C789287AA84FDB5882AA5A1BA19AE24872E7303BF65238C5F788512BCE85F6793C29C1C5E59632B960697B8FD441C5829EF31232123ABBD5221511317ED0CB6F4B25679EED1DA477AACB6FAF30468A8231224492FD6744670318098244F745116992CAE00AB5E0A54F5AD189F0EEE02EEDD942AD43C86269B915DE8C5849CD0313BB8E8FB46CEDDF641BD9F2EA85B52F5945770718699CA5660FF87BCD3A0492052E7FC871B279F538F3B6263A2C69C599C8B075BD275F7A0A87646D5865935D5A7EAB32DF5166D80672262BCBAF4D499B879A8E2C659F8B3DFD872C28478D748854194CDB2A31C5AD9B54B2525A6A3D4C427548F13FDBEE2EFFABDBB1B4162B031D3125D789E0CE6B2FC91F95426D1BD9BA38163D9164A611AECFED488902C758F7E7A6AB9BD0C38252699F55A7B6432C7DA5B77F49BBEB3741CAB38834EEA24AA55FFE5D7D4A37BB235512E43B1ADA72E70E4E1B5691240F07E998D1D2F14279BC2B952AEEF4947E928BC437D88782D64B35DD3913CBEFDC29A1CFAB1EC849DECD4E56A1E7A9CDA2A45C4DEEC642A1F48976E11940683D30175669586F8081D26443EB4444318EFAE5C106150B6311BD33CCC86498ECDE52DC0F0F54E7F9E1ECD7D8F71A5EBF0FC813072A52E15A8EE67D7985EB00B5740B7874FC75C8353D6C5D7EE301BD80B9AA969C5EB017CEE907FB046C2625A88B45642B3DF1805ACF197CCFB3EB39A9F249B90A17695348B1B22B597A48F6D7BC37CEDEEEA1FDF6C9D8FC9D18E50AA748415C5D612D40D6AAA78F468A155EB80DB15F34EBDD1C9724A53E4C21554B0F6A60BAF03401A0CD7C041756A0979D73EDA76CBADB07C8EB0340EAAD286F87856562F0597A981375358C27F2C0035A8E57026CEF2D501BD1162B9F242B0C2F8B17076B79EC3BA4D7A4B4C13316810FF52A654778F0A867D45FF5FECA512E8670B1A40FD77B7B99A6068E3D29F78C7433579E3ED99B98E87FA9A3FCE93AE5BE0BE51964F9F02A3268A4E929F81337D54B6F640534B58F2D9AF0269F928271BD7673FF0D6132C9D8D5EA67F6E72D26620E1F256E1FC6A23A84FC50D75D6D8DB2248BB98EEC3D579C4BDF41893611557A87ACFE213803E4C09D0044A9CA10CA251D4088B1A8FD83D7BB9AB26E1515C13677047A4819025349EFF3A7D0AA28698F1904A5E4CCE21461135B1EFD49C3936C0F5EB339DF7E9EC166C9FC757A7F6A44E699F73DD2394724EF3DD68E9772B219A308EA607FBF9F940E5DDA6AD15256C6F68915EDAA5E6BB8B4753E4304564D7A6D0E964BEB3473B09039918C4EE7227176F8A3A66C37A9668514A212BCB8ABAB75A74E3338CE9915D7240A8146F1FFE8107712DA99DDB50A1BFB8495C18975DB8185A9D58EAEFF92151CA4202D4D712412B18B615324FEB03D772BBBB97A04992EE048B0E04BFAF4FEA2EFD42A714C5F5626095D327957D9AE86AC7F8077C3D98CA976CB5DFE01E55130CE07251FDBFDC1B1232FCF9F45E9E3491B3C223D11550F417CC9C74D8604124A714F7B8170724B50B7FBB3E652D21236337B1155CDACE1DC77F8E3A27A358B146340D0A0D5263D66D07A5F01037CA3D67DADB23D630C77EDFF0C7248FBB6ED5596DBF4406CEDB34F8A4C4866B70F7577D4F3877EAC64150A57DCC81E429576031FBDE499565D3A5CB6E3A01FBCE3B2FF010A90A63CE543016D3D22782E32AA7832E5A8E50C49FFCBA52A47291D7BC29DDDA4B7D968AA7E0AB6FAE0486F9B1073ABAE9AF227B3697FFADE5C7D96EB28C2E687613CCC2D5B5EBBA5F5353CE006F1E2461166E0A18E3FCF786A57E4C6819FB94242824D464A810F8CBDAABAD4E4754731D0C874C943BF19B00DD896718CAB6C09671A1B34D83EBC7C8FE1AC31685368EFF2FB9BCC335DF40760990F368F1E238D27AFD35C0A880821D79BD25C5EAB6E98CA46438FB1B33EBE321D7C6E7C23A84FBC6F7DBC8FC8B8A94240495AB66BEF845A503D7E228752405401996103D20F7B6F725BDE6BFCD61F257D03752E93B7627A0DDB7AE84EA4039C4CD2666507663B38F28639A46D367FA24CD194E3B2755FA19830B2A25D286C072416B5A98E4512C5B87D72BBF538A586643EF9D5C19A15112D8F2DAE4A1FDAE86047BED8B6CA27AAF82C297CB7820CB561C721DF3E8731233BC4C405389985BEFA191B7FBAB8DBB77EF309F37FD2E4F9A22026E84C92C9057CF4E60C879B75F418A74DECE9532297371E8E9EEC9EEC8A156FA7A7476DD5BB213D4E755B312D2216331EE11512EF302AE70F16F8AC66C29EAB74A03266CDFB25829D9F8A45A63EB983DF4E349D7E2F9764DD8AB3CBD7CC5925FF07ECE8C189FD1F9D21BD9CC11B84D893DD4D190183DEFCCE4F5F6A0E1EF4B7775BDF0F13D41D4C0622DA935BC3F63121687576A0B377D5C683C99DCE196DCF4343EA859B8F501C73FE3DF338F95785A33F39E97ADBD1DF55F1E881054AD295F88E991E4EB9E40FE943E271CBCD42D66E70AA444F56E97B233165DDD728430DA41FD861838C0DF044FAB09BFF54F166EB4ABF7CFAD81CCE2AF98EDB455F4E8044CA75737EFD02DD999BB7E4D0B94684FACB99BB4FC42A504321C914AD2E35980BF9A72C727DE8F568FF35F48168BA957332AA28E99DF391C7EC30E2D51243151EF26B48C3F04AC5AB3700F64DEBC7C2A7823B166EA1CC306025F62292DBC5C575E72BFB7EA07A398FF77DE75B098CA20D2FADAC203DFC62EAB70AED42E3410A833D523705267310DA252BE867FFA03152A58300F5992FE1A24B538C1A1F972B1A4D0B66F76CBB6A6BCA74D373149063D5B95D17C2DAE4F3FBF550B2096F11137693B8B102F4E04CD700362BBB39940873026035C481B0335D7CDDB80233D64C0469FD0D2E302A7C42BAE728945FC1091601E739A47877D366E0582392B44E376394F677CD7EF186068AFA3A3A31455ADDA93C2A545C0136AC145F804F3B073C7A33722001C3C69A4DE6C66B4C3DD6BB19980087B8324E2C72F40B223CD712D1A98AF88EA1B7E3C00B6C532E4A5759F724111EBDFDE1A46C7E423E05A1EE4C4F165F7FCE7F89FBE34E9C4E506013E037BD37524212C6A624063628A2C1CADE272F20E5B860E24297F286F777843C742728AAC02A2B89893FDD74A4758DA73025650AB5FAC45D56BE592FA9CBD47D9A112F4A87C20ECC4AB23977C95A94996D466DD3059E8A1901F0A12CE4D3D42CF54681625D3F9A988C97470C8A047A7B60E2EB8A69BF5BEAD48DAC4549DD4334F0EF4E39FF246C6207D4C380E9A91DE9197EDD9FEC6666B71CD9C900B47EB8BE1CFDC5928E40D487A06B1B7EA3D79C4CD249E10BB005796148B63026F14D2D0F1D8B84E7A6A85226883BB92C1CE490E80C308ED6FA86E880DCDBDC2AB9FB72E2B103A06682E03D25D9E02485F395B678EBB3A1621A0E6BABD13C0B5834CDB44B9F469D91051FFDA975CB1DE664D9F52B16F72CA97AE25BA361397E3F94904CC9F01E14901B2C3840EDD9A728C0970FC63C10AA7BD2F4E9D0A3433CCEAAEAE0472FE712199B84FC465CCE69E7ECE98F1D3B66F5F492D5FD307CF881DD400BE8731BF1663BF347A2F3F053768CCDDFB6723F4E45A69993FE50979BCDF5575770394FC49CD0ED9B7126F614837B39E1C700955E2E5A150971024A41DDEAC1A6BC8FCD9006D025DE275146B08D635A8F8ADD890D694B00799B57BE1F3ECCF6FB3D69B218336D029BFD2E7162D8D33860650844757EF3DD55F4A53FCCEEC5CF333BCF55BD6637C9ED7AEA5ACBEAEEF3DB0894FA5A7F7A875493A65780471D3B46B2E0438B64EDE62767E891C147788B93E19994F3EEA224A6C1132DD91F5E7D7F506543AE1D6FB760698D0896BC36F90B86B6878263955708A9132751FC7F479EB9FE93716E89471928D12AE3BE3F46D70A1221528CEA3B57C4A150A0C9C41B6E33309D81DCE7A8BA7E0F4FC7D3A43FEFCEC58034D874C5C43C440304A4E53D0EC8998859D4D607103A221522EDCAEECE9B59BC0E6570D43A5BF20807CD222D3FF4DE42095F04B71F324AE3A9F0C56A6DB04806A535A6D1B49B1D0F6A6D3DDDABB83C9406DFCB21E64B75BB5FFA09B6453A51C9653B9DA55B6FDABB8DB49C8267ABAD831A359A8714C3D73353C7AA620229BAEBAABC36ABF01E8755D09BFB2EAC8A00B753AEE65532927746C73175DBCD059B8FB22549E6846B2FF8B45B814F8ACCED277740D9EEE0A3C14EE3A50AF51258A1308F1F328222E95127F1B3FB326BDF254D79F62199A98F480373FFB997A55F6DD39183D071DDED774791E1CF5621C5354E476E2B664BC95A67B512CD0C8C9639714DC9CB2F478C9F8F612AA0C1C9D25AC886AF8791E9841A0DFA7D5B533968B1593979E66D7BECC470F8854432A61286940498FAFF16412D45860E73B181B41621B1D52BEC9A9FC54D13F8E19B3DFE65053A93D704B27591934FFF64DEEACA304672CA35AB60C1CC5E30F236435F1A8C46586FC5952179BFCE539DE5587E2A9679F0E44D41D569D287DFE7FB5025206ECC05099CC97E8B6A53E1A645FF26CED33ACF253A55327331E4A1714499B914EEA18D5967E439E8AC33B3B80455CD509500C2A93D530FCFAD92F4AFA8A14F19E1526BC614AEBF63EF869C66258DD7D1E256DF5B0B946BAD752B41CAD2050A5F463CB573F64C230FBB4DCB84F4694CE4C30D94556465F0A559F80F35C5DD9E251B8EE82589EC9635416F273B00EB183897E66371A198455CA96295DBA8BA6A7AA973BB356C699280B1309C5982CF370C9F109F89D05AF569D5E8D43A79AB1A27D7AB117C5C90CF7DA125917347A711B2BEC856AE2B3692EB2138D68B3E1C0010DA029B142776FF366263A1F59EDAE2FEDB764A7DC0963362ABF9277413E9FDAD1273E559105F570FD3D58F52DB0397C238A2F682ED981E9EDDDBE5DF0C6A27935FE6144E6AF7C1345D8B3ADE9995F86C07C8C5F04F62FAE0D7D53308512B48B4DA14CE8123BBCDB7B1EB42167F45685F262B8A66C828DB1873BC8CA52FA720A23665923B945992BEA5E2B943C744A385C7A18446744D5367E646FCF2492A8056AF8E7B05FC89FBD8DB8EEB7F4461DADF2E8DABE1058E41ED53C56CC15EDDF3EFC85D6CC584C1A4D187255FCB46BF496D6CA508E6D44A061C8FCBFC31FD58B70692C542DDABB544564BE2C3CFBB6CF5DA2882DC14EF82074FCC0D135C70ECDED62FF55EB7936A2357780C47BE494BD265CF25D5B2C18BE0983C35341760FFAB94A11F69ADF9592088842282D49DC13FAAE548638666191602DEF4788EB94B3C3CA770B11873B18C9AEBE6A84B332E52C2DD6A5002520952E1375BB20D55E41369DD6261FE1A286D5B92FEDB89060B210B1C5FCB6C2EADDE03DA9B449D1C1FA5ED8426C4B611A08A4B56687C8E97878507DBD7A3FF5B1735D8D9BD5B84F198EA312D672837EBCE3C5B08941F09E35A482DA43632A56662887D98E7B26604D861658DC455F5723AB1E6879595D911406C9116423E2CB8E382F99C2B69440DE2F78C072EA6E702A8A9A1C76CE44146386FDB88CDEAA188A3944EC7B7D46C2927377CB3435F5D77EC2812B0EE3370E56D4862F7DF87FBAC81E227C324A9A2E1E874C34473AA76494B16BE33E4753F3C24B47E3A7E8DE5BD13FD0CAEA8881823C557C4744A3D4330556F1EE691217E8CD698EDBAAFC860B424FDBEB9360245D879757DA881FC7BAAA5104C6D6402F23F01668B744DB92CE0F2B3D90FB1DAC2A69A9032F7242EF5F6F1325160709D05DD2FB37770F896AA94ABCACE35B4E83B79E6D9B326C45B48C796612E25E97B6E7F0038377AC3A00F0B5FC261F0CDFF9FC91402147C2EE291A97215D4B5BCE7B445132646262FE06203E12CCC9DDE558DDDF3933F7E3ADF13F7FB625F349D6AFC5597520663205BB4EE59A8F05D04F8A28E0085FFA0F35DFB9B261A2255E9C1B38AD32501161B46763DFBF3CB24933E7CF7B9A439A0298A85142F0C7734AF3BA48EB1D4ED216D15D619F615B764B70F776FB586990B1857F02CA2FA116EAE9AFBD977C2066E7893C68C8E1C366D2F5874A3CA93E3D630E60D58E5778CBB88F31E48FA1A76BC891BD626F18120A90CFEB58B146C3D388AEAE2A6DD6309864FBCEE868BA7C1CA7830AC9644991452A092C206ABFE65DE6C5762EC17478B90815A909EF926B45C1596CA2AFA67D64872E2D654A0C35AC82622553E96CC97B1F4D52467A8A57EF675EEBA6E0B518CD8DE7A312BB74AFBC19F97F4D3AB2B11B54D5659EF349A059EFDB52100743C2F522FA57608C5CEC758D99B97A0BAFFD26616D0FF7022BDDACB67B750792834F245CA91D16C2C5F0EC602E738BD2F2FA027724AAB7FDE23A8F892B48EA65FBCB11955E13A5DE07B99CFADD353311F993823BE8DB4859CD87BA3B46DB9C7CA38B05B2A894E9260C2EE0531B5A81154B50CCDCE338C8D60172AB4F7028BE17FF38E8B5E796CF0C96EF395D292A7567AB1B477EE4D19CDAFF5F1BC0C4DB55C69743F42589D56F9E514793F45DD027F2C1C8A494EE13F34CDAF9D58B624DA5307EFCC9A953C6B82258000B6D0D70B02A28E7C87B470080621AE367082659FFD41CEBDEAE85DC7A673BB1583714E8EE7566EFE20AD85973E722DA0D1E9B8A9DFD05C4CC219B87250BA877561CEB1DBE4BCED336BB116AB3BE6175D6DD1CAF87711A37764EF988C86EB800D16745C5E8723870689BE1F825E8E1F979C0667C2E3DB3556C05BBFB11C9321ECB5436E269AB9C85DE5B57C3DFAE33AFF0B3D222F95794BC0179C3C5AA90176CC36E4EE7AED3158CF011DB32D5B5240E2D0A911A82835CDADB100ECEECCD4E43CD24F43CF1F3692472706E8E578D458BF9E3A7208C462751A15089A277E26EED19DAA77AEA7F294A9C16CB653E039FE19401867A3CAF921FC63EB8A3B52FFC9317649D41EBA7D8EA5127BA1BD8CC4CE33ECEB712B2A2C676192FBBC9D40290410DB06AC3FFD23B43E573FBB80614CEF861F16D096216041724F63AE5FFB62D0B6168EB52CCAB6DB912933B6E0A887F8AB4C91782E2924FF7100F96A21CA34EB81BCC6B9D05369501E973C8AA3CD12C2CEBCF4EE0183822C71952AE020339E31657FF1DA4A4B30051CCF40BFBA6F936BC318524D73E3C2476BC9B21454CB759B3D829A109D4BD717C240084C803342C3849BA073725B1CF554DBA571CFB4D5519DB3282ED82F8C836D22C3D4672A5AB7BE0921173959EBDFAF0B6DD9E66502FB01BB368CDF519E1C8DD3FA0A01A989100981DA558F0356263098900ECCD99AC7FE254FA92E39C6F7EB0BE34EA7EF970D2E83B712A756B7ED4FB6D3D7B07DD66C7175951B7F5FA9375BADCDB880346672F43021448D72E43F41961A89C5108E7071E5D8ACC0F9FD63F1CC4A72A6111B002666F5FBDA9199786D275AF70E673EB12F7D45D537F2B43FBD92CC2C5FF7407AF2CDD1ADEDAAA9AF0DBF4A9BC3447D36E0DA51E215789DEF37FB1FF0CEABFA06F821C1D29B7959DDE69EE0B5444134D2B901223DC70B169D801CFC6A7FD9017ECAE2D99C1A47CBD49621EFD8E6043A86AFFDC1976C30A47F1A1064D5EC6950282854261A7AC3481D9EF9FF6F1284AF529356BC68E1ABFCEB7872251BDBBDB4C7904C14A52ADC885661BE62B636472C9F4C343620B46E0F9B5235D77DF0FD2E8897CF77E1F7C5DEC3E4BC38C8592FEFB3A838FFAF33A315995FC885D271D2FB7F628FEF7E2E78BAEF93D430916BE649CE6288F0219C46CFD5658CFBB7DEFAD6875DC55924564B25F00A3F040503044B392787F6C5A1E8618B432E475CC3CC2ECF11BC026278E0A8B9301F229A9B030A81EE4625F2BCD402FC75722BF51BD073E2F75F4EA88957262361F3C818A5AF33C178BD51DC0A4A9E5C5AAA23D34DBB637DFC24B275B8D889A507A4CF37E867B0DA1E1F8234834F09F833CBBD213B734B60B63B8A45949AF7981E8968F193E3097E6558BAB695B5C958F92CCA723382BC992F9577A862DDB97BC73E31963313A0B9EB68E8AFB6A368F353FC68A77014365C05B9C4647E8443BBB102FDD4B838113664E3DD36D1CF40906C80B0DA9DEEBFAFD898A46D7D124657360AB74D8597FC96B3A328FE75832184C969050F32614E9E083CBED39DBBF7FEDE14D5143C5A9B9482B99658B2A15949A3D314BAA5A119F2282B0FD21D0E6681727FBDCA0CED4932C899CEC25B164CC0990F6D6131A2D41D974015D6921510EF3650C57C8CE275BAC7621BCE549FCAD51931F411B8FE64B7418A6D1ACC3AFF222EF0E0F03B3B4C87384CC5B16C3D574DFD2865968C5986BA95EAAF86EEAA384B5D468F0024DF74C7EC3385675989AA4BF5A0F6B15EFE363C9147885415B84C43E8C65F99AAD81B2AEF369FA493C4F093F4553855EA57EEA772B3A056E17FEBE9FEF7A788487DCC4F19F1FC88DBA95E23AD14F3B7B55509CD57489F07188E7165EA77F469AF808A330119EE7446308DE155D90E2E4AFBF7F805F5BEB1517DAB175DE4A0398AF3CDADF9248DC5D841C328C8F92360EDDC138ABF7B35C1CC158310CD69342C0D42D46EA18EDDE9307E95F75D5D3F8F3653F1959EB0731B519F8CB2959F99A26AA1BC4B998A6BCF01A7B3E3091452F992CB1E36655C2842F5C7FEE99E7C20B60E4E302FFF7CB0F0A5887620FEBDC88D28AA272256538957A5B340B4EC0145154BC4A225AD72F51F7642CB14FBF885D65F34FBB264C0ED1F3C3D9B8A1FEB9906EB22AF0448D69E8F758C12217569E8F5DF89EFBB6661BCC18F8465C261E9349936EFE08A613BE22D31B8AA57C32E41FCF50FE4209C883C3A93948D9E564BFA817EFE4BBD31B3B94C43BAB0E35D9A356B5F34BC0BDC6DB1C226E8C0FA148EFB2800E1289540A51C1FAFC1DFE3635DDD64B381D30672CAF0125567C07DFD581E9F3F68DC674FF3D7FCD919BF41DC5173364E6B21DD9DD281E43F430AC7DD038E09B968E1E1FE04B2B704E6B1210676DF38D25AB627C354A034A525D9F3571377894EF31D27112C1BF365B1A1A827258DF65B1C128E509E139C93C0FAB512305A9F352C0F0D3EAFAF9DD1A4298907503FB648F631DC4C897DACE6DF6C1808ABBA2D99C3F81E951A40C349CA5B72191F446432C4D91E3EF3D11F1B31F0AB25DD09CCC1008A739CA4BD018334995536E1CE22A13D2EF068713EEC89CBF1550DD6F50ECF0EE419CB47617D00E277E47B547B33BB94C9C21E7E427EAE81FEB2BA95843EB28551288D14BDF02B85309127841AAB3B03E6D3A94EC1FBF4520DBA92DC689FF3B85C420808E099593A5A453FA12396DB6DEA138E35F60F19181C003B77507788ECFD84AC5994F4DC29C8740743B0BBB0FA1D3C6A8C21EB501F65DF4C0DA0B95AE321F86BD73EE53C3C138AD9FE80E16CEC4897FB162B74C558E3D8097958428AA3F58B4918BFD71B8B024FC27906F98A8B349DA61F71D5B0AD0F5F2D6911FAF60ABF279B2D1B3339108E2D9247B07336C6EFC5D44EFDF19A883437E40133B3CF93747448388D2051011E0C2E7C0F4725562BE7A8C702BB385D84B819C52AADD1C7CB968266925B9158BDBC57A6B284BD0023EBB828A27ACEFDEA8D940E4A01568AABA7721E2A76788B0B233F01A1A67CD30DF5D31B97530CF598BFB49FDB751F8312DF9782CB1544E84C3CC9273E521738EF0BE98E7BC95D0CA38283E870A8A1B5819AB5EE0FA8094A92606DE90C845829C0DE7F8EB7EE89B4507A7EF858C3F4BB9DA797ADA9E41C7EF7723E5AF33076E1D07634AC70093E600E8C7E5498242CF19E5461C6A6F5532E8905A1C4B40B55972EF45E7FB7056B0C9903359464AE9341382D5E4E066649A250E69E2A17550EFE3C21B8049EFF17A8F240D7912BEDB0B7A0E3EDEDA5EB52B4080A1DD9A63ED9F978DED3549AD47CAD5EE287FF0900DE229DA694CD604D55F2A2DAE2D3CFC42B5F7275099766CFF38D53A872E2EA529AE7008F08F777388F68A9930133662FAEAC91EA548C98941C9CB9502804F968694A129AF339C52A515871CBE319A474CB212DA219AE9651B407E457E5D4ECA8462BA6AC9CC28F51A576BBD6CFE79818419AA242DFCA3FD21D66E0FA7039C3E114C8E3EF0AE9AB5080F50FB7A1FDF419A31C9EC8D3BDEE6DE4B873F2D5A6605A392FBC5D51DDA68394230BB87E3E13AF63E36E98C924279F1F544ED15607F3E746F9AA2817E2C4CC7120099CAF5BF9FC4DA2B7DF252040A08A8F843FE1CAB9EA47FFE2D1A1757A265F64525E88692EF50A9372CCBDDAEB34E76AACE1AAF78FECDBCB6F4D5C3853CD23D5DF432F61C04C838AF94FC6B905A9B5C46F8CFF74AF1BB2B37C8D2174121959B58D3C110F4EC60859724F49217633207A55C223EF377C789ACF5BDCB2F66C2700FF74763390018996A4EC8A12CA3240F536D77B51839A168BF285DF1B50A831C0AD845A6E2A03E2A821D94E019C5AFE4F03B165FFAF0311256CF57C69F035E0D0FE4A09B3627180A961CC38FCBCFCFAE62A688C064C67CF076F8F4E6A067B592D19E9DCC000A4EF2FF70CE635F02033BA11782A8577A8A30000D5C3B18F38CE9804082122542C19B747E0FC6922D6E67E327591A0C97FE99CC5E6C7FC66DA32B491CB99A41FDC73DE55480DF6EB9392B6F10650579918B749D76103CC214A738A770F7FF9D9386DA6AFF99CCB73559B1AA9C07652C00C2FD092C98F64E83A08486E779A1C9D1407E37400D86F0D4B08B4EB5658E60776B96118DFFB983859AB53CF5D07E0CAAC999D1A7D2FE346AE1627DD32E590848BF74A26DDF845DCECBFD84C65DD209909B8C8D29CE6B3D5CE7A4ADBF2DEFAA3DB74EECD888B74F9B62B898C79A4F410AE59F22D0123FE1AA1EC23C4760A0F23428A0AE90F074E7997C2713C397A398275B24EA1EC163E2C6DD5EC9B85D04D118F40D81B045EC6A20DFCB9B0EE61465C3C9299D176E41C955A8775E20C968052DBD7BDC6088F96F0D76AF0CDC997085C03D5F7A55EB4B9F38674D401CE6DB32FA87756689C280DB0EB086685A5486494AFE49793CD3D85DAEF552DEA8D7CFC5561A6C2E6AD4FE02D2A69AEFE549974132956919D5FE2423A8370363CEF89D899C65468B2DA802B6678754CF2C7D9FE9C3B488D3173D708A87A1AF7C97439A1BA23C667A6013BC96B43A57EC16EE0287524AD0337CE62A6D0BA02E264E87C478CC556BBF42C32B4922B8E09CF88CFCDE814DF2B2E9565E4C42214C5AEC9227501DA96BADEA5112E37BCBFEDACDDF0036079FC7043B71DD7D8471F3E187FB67A9FD0CBD01F6016D383C3B58B1DF5E7CC47CCFF04DA3A421CC301CB76FFEF803E196ECDAD6D2DB521DFDEDA58FF1FFD573D80C00D306514EE6113203112F05647BC8EFDA94BB361EB4D4F9867E80325C3EC5770D75A1005022C7B8A377A1637547A470645A49AB44D23CD505E3415D3DB24B35B9688B489ECCDC7FD681973DF543253BCCEAEA14E08917772DE36828E0C018972E358AE363B285679E56F6D038E3527484F47D3BD9CB4F2CC1D82B191A70A9B56623B58D88E9BDB9DD51ABD4F853C3BD61ACBE5394C1F5DBAA09CF70C72F0D48BEBDDAF2CBF6AA5DD42424A1E7CDE5F1967FD2049BC49BA69B587B61F0463E7B1E7BB0C56DC356BE595A39D8FE2C8F9DFABFF0E2BFC4BB86E25C82FD9642F95447894900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%RBIEndFontSubset
/FuraMonoNerdFontComplete-Medium cguidfix
/F2.1/FuraMonoNerdFontComplete-Medium renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
6 w
1 J
1 j
0.60000002 i
/Cs1 SC
0.86274499 0.196078 0.184314 sc
q
0 0 542 324 rc
1 0 0 -1 -1 340 cm
69.300003 64.5 m
155.7 64.5 l
220.5 129 l
220.5 215 l
155.7 279.5 l
69.300003 279.5 l
4.5 215 l
4.5 129 l
h
69.300003 64.5 m
S
3 w
1 1 1 sc
69.300003 64.5 m
155.7 64.5 l
220.5 129 l
220.5 215 l
155.7 279.5 l
69.300003 279.5 l
4.5 215 l
4.5 129 l
h
69.300003 64.5 m
S
/Cs2 SC
0.0054922891 0.16865751 0.21176752 sc
0 i
/F1.1[ 16 0 0 -16 0 0]sf
66.716003 109 m
(!"#$%&'\(\)*")[ 10.512000 8.400000 9.920000 10.224000 9.328000 4.000000 8.480000 5.648000 9.648000 7.008000 0.000000 ] xS
/Cs1 SC
0.16470601 0.63137299 0.59607798 sc
CM
75.099998 157.5 m
147.89999 157.5 l
156.5112 157.5 163.5 141.59599 163.5 122 c
163.5 102.404 156.5112 86.5 147.89999 86.5 c
75.099998 86.5 l
66.4888 86.5 59.5 102.404 59.5 122 c
59.5 141.59599 66.4888 157.5 75.099998 157.5 c
h
75.099998 157.5 m
f
1 w
0.60000002 i
0.0054958002 0.168658 0.21176299 sc
1 0 0 -1 -1 340 cm
76.099998 182.5 m
148.89999 182.5 l
157.5112 182.5 164.5 198.40401 164.5 218 c
164.5 237.59599 157.5112 253.5 148.89999 253.5 c
76.099998 253.5 l
67.4888 253.5 60.5 237.59599 60.5 218 c
60.5 198.40401 67.4888 182.5 76.099998 182.5 c
h
76.099998 182.5 m
S
/Cs3 SC
0.98943001 0.95793998 0.86405998 sc
0 i
81.755997 213 m
(+$**",\(&)[ 11.952000 10.224000 7.248000 7.008000 8.400000 10.848000 5.808000 0.000000 ] xS
94.124001 236 m
('\(-\(")[ 8.480000 5.808000 8.416000 5.648000 0.000000 ] xS
/Cs1 SC
0.86274499 0.196078 0.184314 sc
CM
25 173.33333 m
25 201.68083 l
111.5 215.83333 l
198 201.68083 l
198 173.33333 l
h
25 173.33333 m
f
0.60000002 i
0.0054958002 0.168658 0.21176299 sc
1 0 0 -1 -1 340 cm
26 166.66667 m
26 138.31917 l
112.5 124.16666 l
199 138.31917 l
199 166.66667 l
h
26 166.66667 m
S
/Cs3 SC
0.98943001 0.95793998 0.86405998 sc
0 i
77.676003 158.97166 m
(!"#$."*/)[ 10.512000 8.400000 9.920000 10.224000 7.824000 8.400000 7.248000 0.000000 ] xS
3 w
0.60000002 i
/Cs1 SC
0.0054958002 0.168658 0.21176299 sc
54.327118 217.5 m
54.327118 217.5 39.360283 215.6765 37.660454 202.83333 c
36.967239 197.59573 38.613415 191.52985 40.806202 186.18231 c
S
0 i
CM
45.104801 163.69193 m
36.108227 155.80893 l
43.509899 151.83713 l
h
45.104801 163.69193 m
f
0 J
0 j
1 0 0 -1 -1 340 cm
46.104801 176.30807 m
37.108227 184.19107 l
44.509899 188.16287 l
h
46.104801 176.30807 m
S
1 J
1 j
0.60000002 i
178.13255 210.00418 m
181.18745 205.88841 183.85327 201.05309 184.5 196.16667 c
186.19983 183.3235 173.15218 176.16667 173.15218 176.16667 c
S
0 i
CM
169.39851 121.89872 m
180.17162 127.09682 l
174.09731 132.89879 l
h
169.39851 121.89872 m
f
0 J
0 j
1 0 0 -1 -1 340 cm
170.39851 218.10127 m
181.17162 212.90317 l
175.09731 207.10121 l
h
170.39851 218.10127 m
S
0.14902 0.54509801 0.82352901 sc
CM
523.5 292.43051 m
523.5 302.37714 521.29022 303.60776 505.14822 313.45151 c
504.97769 313.55334 l
488.75046 323.5 488.58167 323.5 471.92813 323.5 c
449.75357 323.5 349.5 323.5 349.5 323.5 c
349.5 218.5 l
523.5 218.5 l
523.5 292.43051 l
h
523.5 292.43051 m
f
1 w
1 J
1 j
0.60000002 i
0.0054958002 0.168658 0.21176299 sc
1 0 0 -1 -1 340 cm
524.5 47.5695 m
524.5 37.622849 522.29022 36.39225 506.14822 26.5485 c
505.97769 26.44665 l
489.75046 16.5 489.58167 16.5 472.92813 16.5 c
450.75357 16.5 350.5 16.5 350.5 16.5 c
350.5 121.5 l
524.5 121.5 l
524.5 47.5695 l
h
524.5 47.057098 m
524.5 37.622849 524.32947 37.622849 489.58167 37.622849 c
489.58167 37.622849 l
489.58167 16.6029 489.58167 16.5 473.94778 16.5 c
S
/Cs3 SC
0.98943001 0.95793998 0.86405998 sc
0 i
/F2.1[ 16 0 0 -16 0 0]sf
413.54001 74.5 m
(!"##$)[ 9.584000 9.584000 9.584000 9.584000 0.000000 ] xS
/Cs1 SC
0.14902 0.54509801 0.82352901 sc
CM
541.25 74.430496 m
541.25 84.377151 538.58936 85.60775 519.15405 95.4515 c
518.94873 95.553352 l
499.41077 105.5 499.20755 105.5 479.15628 105.5 c
452.45761 105.5 331.75 105.5 331.75 105.5 c
331.75 0.5 l
541.25 0.5 l
541.25 74.430496 l
h
541.25 74.430496 m
f
0.60000002 i
0.0054958002 0.168658 0.21176299 sc
1 0 0 -1 -1 340 cm
542.25 265.56949 m
542.25 255.62285 539.58936 254.39224 520.15405 244.54849 c
519.94873 244.44666 l
500.41077 234.5 500.20755 234.5 480.15628 234.5 c
453.45761 234.5 332.75 234.5 332.75 234.5 c
332.75 339.5 l
542.25 339.5 l
542.25 265.56949 l
h
542.25 265.0571 m
542.25 255.62285 542.04468 255.62285 500.20755 255.62285 c
500.20755 255.62285 l
500.20755 234.60291 500.20755 234.5 481.38397 234.5 c
S
/Cs3 SC
0.98943001 0.95793998 0.86405998 sc
0 i
394.37201 281 m
(!%&''\(\)*$)[ 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 0.000000 ] xS
346.452 304 m
(+,-.\)/012\)34151\)',6)[ 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 9.584000 0.000000 ] xS
3 w
0.60000002 i
/Cs1 SC
0.14901966 0.54509801 0.82352942 sc
437.5 121.5 m
437.5 218.60001 l
S
0 i
CM
436.5 110.2 m
440.70001 121.4 l
432.29999 121.4 l
h
436.5 110.2 m
f
0 J
0 j
1 0 0 -1 -1 340 cm
437.5 229.8 m
441.70001 218.60001 l
433.29999 218.60001 l
h
437.5 229.8 m
S
ep
end
%%Trailer
%%EOF
